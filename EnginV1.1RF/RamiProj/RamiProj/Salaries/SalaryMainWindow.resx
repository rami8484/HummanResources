<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>