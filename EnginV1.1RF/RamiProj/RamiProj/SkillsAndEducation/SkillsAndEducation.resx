<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>