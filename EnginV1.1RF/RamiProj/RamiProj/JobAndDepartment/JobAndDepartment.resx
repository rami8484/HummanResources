<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IQgAQhCABCEIA//Z
</value>
  </data>
</root>