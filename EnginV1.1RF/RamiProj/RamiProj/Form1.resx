<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>